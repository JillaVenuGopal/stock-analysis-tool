{"version":3,"sources":["Components/About.jsx","Components/Dashboard.jsx","Components/CompanyDetails.jsx","Components/Comparision.jsx","Components/Login.jsx","Components/NavigationBar.jsx","Components/PageNotFound.jsx","Components/Performance.jsx","Components/Revenue.jsx","Components/Sectors.jsx","Components/SideBar.jsx","Components/SP500.jsx","Components/Top.jsx","Components/Home.jsx","App.js","reportWebVitals.js","Constants.js","index.js"],"names":["About","componentDidMount","console","log","Fragment","React","Component","Dashboard","props","company","setState","axios","get","state","then","s","status","details","data","loading","catch","e","error","createGraph","days","closePriceData","name","length","toDate","fromDate","slice","i","element","push","x","y","options","xaxis","series","selectedPeriod","currentTarget","value","chart","background","type","height","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","stroke","show","curve","lineCap","colors","undefined","width","dashArray","dataLabels","markers","size","title","text","align","style","fontSize","fontWeight","fontFamily","color","display","justifyContent","fill","opacity","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","labels","formatter","val","toFixed","dt","Date","getDate","getMonth","getFullYear","tooltip","shared","this","Divider","ButtonGroup","margin","Button","onClick","CompanyDetails","match","params","selectedCompany","getCompanyDetails","a","companyDetails","stockdetails","companyCurrentDayStockDetails","stockkeys","Paper","elevation","padding","Typography","variant","Grid","container","Object","keys","map","key","res","Chip","label","withStyles","theme","formControl","spacing","minWidth","selectEmpty","marginTop","Comparision","companyNames","onClickSubmit","selectedCompanies","index","assign","selectedTimePeriod","rate","timePeriod","num","period","underscore","invert","direction","justify","alignItems","item","xs","Autocomplete","multiple","firstCompany","onChange","reason","detail","companies","option","id","freeSolo","companyname","renderInput","TextField","helperText","FormControl","InputLabel","Select","labelId","target","MenuItem","inputProps","min","max","step","to","pathname","Login","NavigationBar","history","classes","className","root","link","grid","flexGrow","paper","textAlign","palette","secondary","textDecoration","withRouter","PageNotFound","Performance","Revenue","companyStockDetails","sort","b","topCompanies","uuidv4","Sectors","location","sectors","selectedSector","selectedSectorCompanies","sector","getOptionLabel","SideBar","Accordion","border","AccordionSummary","aria-controls","AccordionDetails","heading","typography","pxToRem","fontWeightRegular","SP500","sp500","Top","drawerWidth","Home","AppBar","position","appBar","backgroundColor","Toolbar","Drawer","drawer","drawerPaper","anchor","content","exact","path","component","render","marginLeft","flexShrink","mixins","default","flexWrap","overflowX","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","firebaseconfig","firebase","initializeApp","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49bcecae.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass About extends React.Component {\r\n  componentDidMount = () => {\r\n    console.log(\"About\")\r\n  };\r\n\r\n  render() {\r\n    return <React.Fragment>About</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { ButtonGroup, Button, Divider } from \"@material-ui/core\";\r\nimport Loader from \"react-loader-spinner\";\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      details: [],\r\n      selectedPeriod: \"\",\r\n      company: \"\",\r\n      error: false,\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          background: \"#ffffff\",\r\n          type: \"area\",\r\n          height: \"auto\",\r\n          zoom: {\r\n            type: \"x\",\r\n            enabled: true,\r\n            autoScaleYaxis: true,\r\n          },\r\n          toolbar: {\r\n            autoSelected: \"zoom\",\r\n          },\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          curve: \"smooth\",\r\n          lineCap: \"butt\",\r\n          colors: undefined,\r\n          width: 2,\r\n          dashArray: 0,\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        markers: {\r\n          size: 0,\r\n        },\r\n        title: {\r\n          text: \"Stock Price Movement\",\r\n          align: \"left\",\r\n          style: {\r\n            fontSize: \"24px\",\r\n            fontWeight: \"bold\",\r\n            fontFamily: undefined,\r\n            color: \"blue\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          },\r\n        },\r\n        fill: {\r\n          type: \"solid\",\r\n          opacity: 0.9,\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            inverseColors: false,\r\n            opacityFrom: 1,\r\n            opacityTo: 1,\r\n            stops: [0, 90, 100],\r\n          },\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            formatter: (val) => {\r\n              return val.toFixed();\r\n            },\r\n          },\r\n          title: {\r\n            text: \"Price in Rs\",\r\n          },\r\n        },\r\n        xaxis: {\r\n          type: \"datetime\",\r\n          labels: {\r\n            formatter: (val) => {\r\n              const dt = new Date(val);\r\n              return (\r\n                dt.getDate() +\r\n                \"-\" +\r\n                (dt.getMonth() + 1) +\r\n                \"-\" +\r\n                dt.getFullYear()\r\n              );\r\n            },\r\n          },\r\n          title: {\r\n            text: \"Time Period\",\r\n          },\r\n        },\r\n\r\n        tooltip: {\r\n          shared: false,\r\n          x: {\r\n            formatter: (val) => {\r\n              const dt = new Date(val);\r\n              return (\r\n                dt.getDate() +\r\n                \"-\" +\r\n                (dt.getMonth() + 1) +\r\n                \"-\" +\r\n                dt.getFullYear()\r\n              );\r\n            },\r\n          },\r\n          y: {\r\n            formatter: (val) => {\r\n              return val;\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"Dashboard\");\r\n    if (this.props.company !== \"sp500\") {\r\n      this.setState({ company: this.props.company }, () => {\r\n        axios\r\n          .get(\"/stockdetails?company=\" + this.state.company)\r\n          .then((s) => {\r\n            if (s.status === 200) {\r\n              this.setState({ details: s.data, loading: false }, () => {});\r\n            } else {\r\n              this.setState({ details: [], loading: false }, () => {});\r\n            }\r\n          })\r\n          .then(() => {})\r\n          .catch((e) => {\r\n            console.log(e);\r\n            this.setState({ loading: false, error: true }, () => {});\r\n          });\r\n      });\r\n    } else {\r\n      this.setState({ company: this.props.company }, () => {\r\n        axios\r\n          .get(\"/sp500\")\r\n          .then((s) => {\r\n            if (s.status === 200) {\r\n              this.setState({ details: s.data, loading: false }, () => {});\r\n            } else {\r\n              this.setState({ details: [], loading: false }, () => {});\r\n            }\r\n          })\r\n          .then(() => {})\r\n          .catch((e) => {});\r\n      });\r\n    }\r\n  };\r\n\r\n  createGraph = (days) => {\r\n    let closePriceData = {\r\n      name: \"Close Price\",\r\n      data: [],\r\n    };\r\n    days =\r\n      days === \"all\"\r\n        ? this.state.details.length - 1\r\n        : days > this.state.details.length - 1\r\n        ? this.state.details.length - 1\r\n        : days;\r\n    const toDate = this.state.details[0][\"Date\"];\r\n    const fromDate = this.state.details[days][\"Date\"];\r\n    const data = this.state.details.slice(0, days);\r\n    for (let i = 0; i < data.length; i++) {\r\n      const element = data[i];\r\n      closePriceData.data.push({\r\n        x: element[\"Date\"],\r\n        y: element[\"Close Price\"] || element[\"Close\"],\r\n      });\r\n    }\r\n    let options = this.state.options;\r\n    options.xaxis[\"min\"] = fromDate;\r\n    options.xaxis[\"max\"] = toDate;\r\n    const series = [];\r\n    series.push(closePriceData);\r\n    this.setState(\r\n      {\r\n        series: series,\r\n        options: options,\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  selectedPeriod = (e) => {\r\n    const days = e.currentTarget.value;\r\n    if (this.state.selectedPeriod === days) {\r\n      return;\r\n    }\r\n    this.setState({ selectedPeriod: days }, () => {\r\n      this.createGraph(days);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          this.state.error !== true && (\r\n            <div>\r\n              <Divider />\r\n              <Divider />\r\n              <Divider />\r\n              <ButtonGroup\r\n                color=\"primary\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  margin: \"10px\",\r\n                }}\r\n              >\r\n                <Button value=\"7\" onClick={this.selectedPeriod}>\r\n                  7D\r\n                </Button>\r\n                <Button value=\"30\" onClick={this.selectedPeriod}>\r\n                  1M\r\n                </Button>\r\n                <Button value=\"90\" onClick={this.selectedPeriod}>\r\n                  3M\r\n                </Button>\r\n                <Button value=\"180\" onClick={this.selectedPeriod}>\r\n                  6M\r\n                </Button>\r\n                <Button value=\"360\" onClick={this.selectedPeriod}>\r\n                  1Y\r\n                </Button>\r\n                <Button value=\"1800\" onClick={this.selectedPeriod}>\r\n                  5Y\r\n                </Button>\r\n                <Button value=\"all\" onClick={this.selectedPeriod}>\r\n                  All\r\n                </Button>\r\n              </ButtonGroup>\r\n              <Chart options={this.state.options} series={this.state.series} />\r\n            </div>\r\n          )\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import {\r\n  Chip,\r\n  Divider,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport underscore from \"underscore\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst styles = (theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 150,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass CompanyDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      companyDetails: [],\r\n      companyCurrentDayStockDetails: [],\r\n      selectedCompany: \"\",\r\n      stockkeys: [\r\n        \"Date\",\r\n        \"Open Price\",\r\n        \"High Price\",\r\n        \"Low Price\",\r\n        \"Close Price\",\r\n        \"WAP\",\r\n        \"No.of Shares\",\r\n        \"No. of Trades\",\r\n        \"Total Turnover (Rs.)\",\r\n        \"% Deli. Qty to Traded Qty\",\r\n        \"Spread High-Low\",\r\n        \"Spread Close-Open\",\r\n      ],\r\n      stockdetails: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"CompanyDetails\");\r\n    const { match } = this.props;\r\n    const company = match.params.company;\r\n    this.setState({ selectedCompany: company }, () => {\r\n      this.getCompanyDetails(this.state.selectedCompany);\r\n    });\r\n  };\r\n\r\n  getCompanyDetails = async (company) => {\r\n    await axios.get(\"/companydetails?company=\" + company).then((s) => {\r\n      this.setState({ companyDetails: s.data }, () => {});\r\n    });\r\n    await axios\r\n      .get(\"/previousdaystockdetails?company=\" + company)\r\n      .then((s) => {\r\n        if (s.status === 200) {\r\n          this.setState({ stockdetails: s.data }, () => {});\r\n        } else {\r\n          this.setState({ stockdetails: [] }, () => {});\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.selectedCompany !== \"\" && (\r\n          <div>\r\n            <Paper\r\n              elevation={3}\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"15px\",\r\n                margin: \"15px\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\">{this.state.selectedCompany}</Typography>\r\n            </Paper>\r\n            <Divider />\r\n            <Grid container>\r\n              {Object.keys(this.state.companyDetails).map((key) => {\r\n                if (this.state.companyDetails[key] === null) {\r\n                  return <span></span>;\r\n                }\r\n                let res = key + \" : \" + this.state.companyDetails[key];\r\n                return (\r\n                  <Chip\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    label={res}\r\n                    style={{ margin: \"5px\" }}\r\n                  />\r\n                );\r\n              })}\r\n            </Grid>\r\n          </div>\r\n        )}\r\n        <Divider />\r\n        <Divider />\r\n        {this.state.stockdetails.length !== 0 &&\r\n          this.state.stockkeys.map((key) => {\r\n            let res = key + \" : \" + this.state.stockdetails[key];\r\n            return (\r\n              <Chip\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                label={res}\r\n                style={{ margin: \"5px\" }}\r\n              />\r\n            );\r\n          })}\r\n        {this.state.selectedCompany !== \"\" &&\r\n          this.state.stockdetails.length !== 0 && (\r\n            <Dashboard company={this.state.selectedCompany} />\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(CompanyDetails);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport underscore from \"underscore\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport {\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  Button,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Typography,\r\n  TextField,\r\n  Chip,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nclass Comparision extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      companyNames: [],\r\n      selectedCompanies: [],\r\n      selectedTimePeriod: \"180\",\r\n      rate: \"1\",\r\n      stockkeys: [\r\n        \"Date\",\r\n        \"Open Price\",\r\n        \"High Price\",\r\n        \"Low Price\",\r\n        \"Close Price\",\r\n        \"WAP\",\r\n        \"No.of Shares\",\r\n        \"No. of Trades\",\r\n        \"Total Turnover (Rs.)\",\r\n        \"% Deli. Qty to Traded Qty\",\r\n        \"Spread High-Low\",\r\n        \"Spread Close-Open\",\r\n      ],\r\n      timePeriod: {\r\n        \"1 day\": \"1\",\r\n        \"7 days\": \"7\",\r\n        \"1 month\": \"30\",\r\n        \"3 months\": \"90\",\r\n        \"6 months\": \"180\",\r\n        \"1 year\": \"360\",\r\n        \"2 years\": \"720\",\r\n        \"5 years\": \"1800\",\r\n        \"10 years\": \"3600\",\r\n      },\r\n      stockdetails: [],\r\n      num: 10,\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"Comparision\");\r\n    axios\r\n      .get(\"/companynames\")\r\n      .then((s) => {\r\n        if (s.status === 200) {\r\n          this.setState({ companyNames: s.data }, () => {});\r\n        } else {\r\n          this.setState({ companyNames: s.data }, () => {});\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  onClickSubmit = async () => {\r\n    if (this.state.selectedCompanies.length < 2) {\r\n      this.setState({ error: \"select atleast two companies\" }, () => {});\r\n      return;\r\n    } else {\r\n      this.setState({ error: \"\", loading: true }, () => {});\r\n    }\r\n    let stockdetails = {};\r\n    for (let index = 0; index < this.state.selectedCompanies.length; index++) {\r\n      const company = this.state.selectedCompanies[index];\r\n      stockdetails[company] = {};\r\n    }\r\n    for (let index = 0; index < this.state.selectedCompanies.length; index++) {\r\n      const company = this.state.selectedCompanies[index];\r\n      await axios\r\n        .get(\"/previousdaystockdetails?company=\" + company)\r\n        .then((s) => {\r\n          if (s.status === 200) {\r\n            stockdetails[company] = Object.assign(\r\n              stockdetails[company],\r\n              s.data\r\n            );\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n      await axios\r\n        .get(\r\n          \"/topCompanies?days=\" +\r\n            this.state.selectedTimePeriod +\r\n            \"&rate=\" +\r\n            this.state.rate / 100 +\r\n            \"&company=\" +\r\n            company\r\n        )\r\n        .then((s) => {\r\n          if (s.status === 200) {\r\n            stockdetails[company] = Object.assign(\r\n              stockdetails[company],\r\n              s.data\r\n            );\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n    this.setState({ stockdetails: stockdetails, loading: false }, () => {});\r\n  };\r\n\r\n  render() {\r\n    const period = underscore.invert(this.state.timePeriod);\r\n    return (\r\n      <React.Fragment>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={4}>\r\n            <Autocomplete\r\n              multiple\r\n              value={this.state.firstCompany}\r\n              onChange={(e, company, reason, detail) => {\r\n                if (reason === \"remove-option\") {\r\n                  let companies = this.state.stockdetails;\r\n                  delete companies[detail.option];\r\n                  this.setState({ stockdetails: companies }, () => {});\r\n                } else {\r\n                  this.setState({ selectedCompanies: company }, () => {});\r\n                }\r\n              }}\r\n              id=\"select multiple companies\"\r\n              freeSolo\r\n              options={this.state.companyNames.map(\r\n                (companyname) => companyname\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"select multiple companies\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  helperText={this.state.error}\r\n                  error={this.state.error !== \"\"}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <FormControl style={{ minWidth: \"150px\" }} variant=\"outlined\">\r\n              <InputLabel>trading period</InputLabel>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                labelId=\"trading period\"\r\n                id=\"trading\"\r\n                onChange={(e) => {\r\n                  this.setState(\r\n                    { selectedTimePeriod: e.target.value },\r\n                    () => {}\r\n                  );\r\n                }}\r\n                value={this.state.selectedTimePeriod}\r\n              >\r\n                {Object.keys(this.state.timePeriod).map((period) => {\r\n                  return (\r\n                    <MenuItem value={this.state.timePeriod[period]}>\r\n                      {period}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField\r\n              type=\"number\"\r\n              style={{ width: \"100%\" }}\r\n              inputProps={{ min: \"-100\", max: \"100\", step: \"0.01\" }}\r\n              label=\"rate of growth\"\r\n              variant=\"outlined\"\r\n              value={this.state.rate}\r\n              onChange={(e) => {\r\n                this.setState({ rate: e.target.value });\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"outlined\"\r\n              size=\"large\"\r\n              onClick={this.onClickSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider />\r\n        <Divider />\r\n        {this.state.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          this.state.stockdetails.length !== 0 && (\r\n            <Grid\r\n              container\r\n              spacing={1}\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"center\"\r\n            >\r\n              {Object.keys(this.state.stockdetails).map((company) => {\r\n                const element = this.state.stockdetails[company];\r\n                return (\r\n                  <Grid item xs={6}>\r\n                    <Paper\r\n                      style={{\r\n                        display: \"flex\",\r\n                        padding: \"15px\",\r\n                        margin: \"15px\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <NavLink\r\n                        to={{\r\n                          pathname: \"companydetails/\" + element[\"company\"],\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"h6\">\r\n                          {element[\"company\"]}\r\n                        </Typography>\r\n                      </NavLink>\r\n                    </Paper>\r\n                    <Typography variant=\"h6\">\r\n                      In the last {period[element[\"totalNumberOfDays\"]]}, for{\" \"}\r\n                      {element[\"percentOfDays\"]} percent of trading days close\r\n                      price growth rate was more than {element[\"rate\"]} %\r\n                    </Typography>\r\n                    <Dashboard company={element[\"company\"]} />\r\n                    {this.state.stockkeys.map((key, i) => {\r\n                      let res = key + \" : \" + element[key];\r\n                      return (\r\n                        <Chip\r\n                          color=\"primary\"\r\n                          variant=\"outlined\"\r\n                          label={res}\r\n                          style={{ margin: \"5px\" }}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          )\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comparision;\r\n","import React from \"react\";\r\n\r\nclass Login extends React.Component {\r\n  componentDidMount = () => {\r\n    console.log(\"Login\");\r\n  };\r\n  render() {\r\n    return <React.Fragment>Login</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  grid: {\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nclass NavigationBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { selectedCompany: \" \", companyNames: [] };\r\n  }\r\n\r\n  selectedCompany = (e, val) => {\r\n    const { history } = this.props;\r\n    if (val === null) {\r\n      history.push(\"/\");\r\n      return;\r\n    }\r\n    this.setState({ selectedCompany: val }, () => {\r\n      history.push(\"/companydetails/\" + this.state.selectedCompany);\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"NavigationBar\");\r\n    axios\r\n      .get(\"/companyNames\")\r\n      .then((s) => {\r\n        if (s.status === 200) {\r\n          this.setState({ companyNames: s.data });\r\n        } else {\r\n          this.setState({ companyNames: [] });\r\n        }\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Grid container className={classes.root} spacing={2}>\r\n        <Grid item>\r\n          <NavLink to=\"/\" className={classes.link}>\r\n            <Typography className={classes.grid} variant=\"h4\">\r\n              Home\r\n            </Typography>\r\n          </NavLink>\r\n        </Grid>\r\n        <Grid item>\r\n          <NavLink to=\"/about\" className={classes.link}>\r\n            <Typography className={classes.grid} variant=\"h4\">\r\n              About\r\n            </Typography>\r\n          </NavLink>\r\n        </Grid>\r\n        <Grid item>\r\n          <NavLink to=\"/performance\" className={classes.link}>\r\n            <Typography className={classes.grid} variant=\"h4\">\r\n              Performance\r\n            </Typography>\r\n          </NavLink>\r\n        </Grid>\r\n        <Grid item>\r\n          <NavLink to=\"/login\" className={classes.link}>\r\n            <Typography className={classes.grid} variant=\"h4\">\r\n              Login\r\n            </Typography>\r\n          </NavLink>\r\n        </Grid>\r\n        <Grid item>\r\n          <NavLink to=\"/comparision\" className={classes.link}>\r\n            <Typography className={classes.grid} variant=\"h4\">\r\n              Comparision\r\n            </Typography>\r\n          </NavLink>\r\n        </Grid>\r\n        <Grid item>\r\n          <Autocomplete\r\n            style={{ width: \"200px\" }}\r\n            value={this.state.selectedCompany}\r\n            onChange={(e, val) => {\r\n              this.selectedCompany(e, val);\r\n            }}\r\n            id=\"search for companies\"\r\n            freeSolo\r\n            options={this.state.companyNames.map((companyname) => companyname)}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"search for companies\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(withRouter(NavigationBar));\r\n","import React from \"react\";\r\n\r\nclass PageNotFound extends React.Component {\r\n  componentDidMount = () => {\r\n    console.log(\"PageNotFound\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Page Not Found</h1>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\n\r\nclass Performance extends React.Component {\r\n  componentDidMount = () => {\r\n    console.log(\"Performance\");\r\n  };\r\n  render() {\r\n    return <React.Fragment>Performance</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default Performance;\r\n","import { Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass Revenue extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      topCompanies: [],\r\n      num: 30,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"Revenue\");\r\n    axios.get(\"/previousdaystockdetails\").then((s) => {\r\n      if (s.status === 200) {\r\n        let companyStockDetails = s.data;\r\n        companyStockDetails.sort((a, b) => {\r\n          return a[\"Revenue\"] - b[\"Revenue\"];\r\n        });\r\n        companyStockDetails = companyStockDetails.slice(0, this.state.num);\r\n        let topCompanies = [];\r\n        for (let index = 0; index < companyStockDetails.length; index++) {\r\n          const element = companyStockDetails[index];\r\n          topCompanies.push(element[\"company\"]);\r\n        }\r\n        this.setState({ topCompanies: topCompanies, loading: false }, () => {});\r\n      } else {\r\n        this.setState({ topCompanies: [], loading: false }, () => {});\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div>\r\n            <Paper\r\n              elevation={1}\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"15px\",\r\n                margin: \"15px\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" color=\"primary\">\r\n                Top {this.state.num} Companies Revenue wise\r\n              </Typography>\r\n            </Paper>\r\n            {this.state.topCompanies.map((company) => {\r\n              return (\r\n                <NavLink\r\n                  style={{ textDecoration: \"none\" }}\r\n                  key={uuidv4()}\r\n                  to={{\r\n                    pathname: \"/companydetails/\" + company,\r\n                  }}\r\n                >\r\n                  <Paper\r\n                    elevation={1}\r\n                    style={{ display: \"flex\", padding: \"10px\", margin: \"10px\" }}\r\n                  >\r\n                    <Typography variant=\"h6\">{company}</Typography>\r\n                  </Paper>\r\n                </NavLink>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Revenue;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nclass Sectors extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sectors: [],\r\n      selectedSector: \"\",\r\n      selectedSectorCompanies: [],\r\n      selectedCompany: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"Sectors\");\r\n    const { history, location } = this.props;\r\n    if (\"state\" in location && location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    axios.get(\"/sectors\").then((s) => {\r\n      if (s.status === 200) {\r\n        this.setState({ sectors: s.data }, () => {});\r\n      } else {\r\n        this.setState({ sectors: [] }, () => {});\r\n      }\r\n    });\r\n  };\r\n\r\n  selectedSector = (e, val) => {\r\n    if (val === null) {\r\n      this.setState(\r\n        { selectedSector: \"\", selectedSectorCompanies: [] },\r\n        () => {}\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          selectedSector: val,\r\n          selectedSectorCompanies: this.state.sectors[val],\r\n        },\r\n        () => {}\r\n      );\r\n    }\r\n  };\r\n\r\n  selectedCompany = (val) => {\r\n    const { history } = this.props;\r\n    if (val === null) {\r\n      history.push(\"/\");\r\n    } else {\r\n      this.setState({ selectedCompany: val }, () => {\r\n        history.push(\"companydetails/\" + val);\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.sectors.length !== 0 && (\r\n          <Autocomplete\r\n            style={{ width: \"50%\", align: \"center\" }}\r\n            onChange={(e, val) => {\r\n              this.selectedSector(e, val);\r\n            }}\r\n            id=\"search for sector\"\r\n            freeSolo\r\n            options={Object.keys(this.state.sectors).map((sector) => sector)}\r\n            getOptionLabel={(option) => option}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"search for sector\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n        {this.state.selectedSectorCompanies.length !== 0 && (\r\n          <Autocomplete\r\n            style={{ width: \"50%\", align: \"center\" }}\r\n            onChange={(e, val) => {\r\n              this.selectedCompany(val);\r\n            }}\r\n            id=\"search for companies\"\r\n            freeSolo\r\n            options={this.state.selectedSectorCompanies.map(\r\n              (company) => company\r\n            )}\r\n            getOptionLabel={(option) => option}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"search for company\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sectors;\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Paper,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      padding: theme.spacing(2),\r\n      // margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n  },\r\n});\r\n\r\nclass SideBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount = () => {\r\n    console.log(\"Sidebar\");\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Paper className={classes.paper} elevation={0}>\r\n          <Accordion style={{ border: \"none\" }}>\r\n            <AccordionSummary aria-controls=\"panel1a-content\" id=\"top10\">\r\n              <Typography variant=\"h4\">TOP 10</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <NavLink\r\n                to={{ pathname: \"/top/10/buy\" }}\r\n                className={classes.link}\r\n              >\r\n                <Paper className={classes.paper} elevation={0}>\r\n                  <Typography variant=\"h6\">BUY</Typography>\r\n                </Paper>\r\n              </NavLink>\r\n            </AccordionDetails>\r\n            <AccordionDetails>\r\n              <NavLink\r\n                to={{ pathname: \"/top/10/sell\" }}\r\n                className={classes.link}\r\n              >\r\n                <Paper className={classes.paper} elevation={0}>\r\n                  <Typography variant=\"h6\">SELL</Typography>\r\n                </Paper>\r\n              </NavLink>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Paper>\r\n        <Paper className={classes.paper} elevation={0}>\r\n          <Accordion>\r\n            <AccordionSummary aria-controls=\"panel1a-content\">\r\n              <Typography variant=\"h4\">TOP 30</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <NavLink\r\n                to={{ pathname: \"/top/30/buy\" }}\r\n                className={classes.link}\r\n              >\r\n                <Paper className={classes.paper} elevation={0}>\r\n                  <Typography variant=\"h6\">BUY</Typography>\r\n                </Paper>\r\n              </NavLink>\r\n            </AccordionDetails>\r\n            <AccordionDetails>\r\n              <NavLink\r\n                to={{ pathname: \"/top/30/sell\" }}\r\n                className={classes.link}\r\n              >\r\n                <Paper className={classes.paper} elevation={0}>\r\n                  <Typography variant=\"h6\">SELL</Typography>\r\n                </Paper>\r\n              </NavLink>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Paper>\r\n        <Paper className={classes.paper} elevation={0}>\r\n          <NavLink to={{ pathname: \"/sectors\" }} className={classes.link}>\r\n            <Paper className={classes.paper} elevation={0}>\r\n              <Typography variant=\"h4\">Sectors</Typography>\r\n            </Paper>\r\n          </NavLink>\r\n        </Paper>\r\n        <Paper className={classes.paper} elevation={0}>\r\n          <NavLink to={{ pathname: \"/sp500\" }} className={classes.link}>\r\n            <Paper className={classes.paper} elevation={0}>\r\n              <Typography variant=\"h4\">S AND P 500</Typography>\r\n            </Paper>\r\n          </NavLink>\r\n        </Paper>\r\n        <Paper className={classes.paper} elevation={0}>\r\n          <NavLink to={{ pathname: \"/revenue\" }} className={classes.link}>\r\n            <Paper className={classes.paper} elevation={0}>\r\n              <Typography variant=\"h4\">TOP REVENUE</Typography>\r\n            </Paper>\r\n          </NavLink>\r\n        </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SideBar);\r\n","import React from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport axios from \"axios\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nclass SP500 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { sp500: [] };\r\n  }\r\n  componentDidMount = () => {\r\n    console.log(\"SP500\");\r\n    // axios\r\n    //   .get(\"/sp500\")\r\n    //   .then((s) => {\r\n    //     this.setState({ sp500: s.data, loading: false }, () => {});\r\n    //   })\r\n    //   .then(() => {})\r\n    //   .catch((e) => {});\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Paper\r\n          elevation={3}\r\n          style={{\r\n            display: \"flex\",\r\n            padding: \"15px\",\r\n            margin: \"15px\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\">{\"SP 500\"}</Typography>\r\n        </Paper>\r\n        <Dashboard company=\"sp500\" />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SP500;\r\n","import { Paper, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass Top extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      num: 10,\r\n      type: \"buy\",\r\n      topCompanies: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"Top\");\r\n    const { history, location } = this.props;\r\n    if (\"state\" in location && location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n    const { match } = this.props;\r\n    const { num, type } = match.params;\r\n    this.setState({ num: num, type: type, loading: true }, () => {});\r\n\r\n    axios.get(\"/previousdaystockdetails\").then((s) => {\r\n      if (s.status === 200) {\r\n        let companyStockDetails = s.data;\r\n        if (type === \"sell\") {\r\n          companyStockDetails.sort((a, b) => {\r\n            return a[\"Close Price\"] - b[\"Close Price\"];\r\n          });\r\n        } else if (type === \"buy\") {\r\n          companyStockDetails.sort((a, b) => {\r\n            return b[\"Close Price\"] - a[\"Close Price\"];\r\n          });\r\n        }\r\n        companyStockDetails = companyStockDetails.slice(0, num);\r\n        let topCompanies = [];\r\n        for (let index = 0; index < companyStockDetails.length; index++) {\r\n          const element = companyStockDetails[index];\r\n          topCompanies.push(element[\"company\"]);\r\n        }\r\n        this.setState({ topCompanies: topCompanies, loading: false }, () => {});\r\n      } else {\r\n        this.setState({ topCompanies: [], loading: false }, () => {});\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div>\r\n            <Paper\r\n              elevation={1}\r\n              style={{\r\n                display: \"flex\",\r\n                padding: \"15px\",\r\n                margin: \"15px\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h4\" color=\"primary\">\r\n                Top {this.state.num} Companies for{\" \"}\r\n                {this.state.type === \"buy\" ? \"Investing\" : \"Trading\"}\r\n              </Typography>\r\n            </Paper>\r\n            {this.state.topCompanies.map((company) => {\r\n              return (\r\n                <NavLink\r\n                  style={{ textDecoration: \"none\" }}\r\n                  key={uuidv4()}\r\n                  to={{\r\n                    pathname: \"/companydetails/\" + company,\r\n                  }}\r\n                >\r\n                  <Paper\r\n                    elevation={1}\r\n                    style={{ display: \"flex\", padding: \"10px\", margin: \"10px\" }}\r\n                  >\r\n                    <Typography variant=\"h6\">{company}</Typography>\r\n                  </Paper>\r\n                </NavLink>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Top;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport React from \"react\";\r\n\r\nimport { Route, Switch, withRouter, useHistory } from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport CompanyDetails from \"./CompanyDetails\";\r\nimport Comparision from \"./Comparision\";\r\nimport Login from \"./Login\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport Performance from \"./Performance\";\r\nimport Revenue from \"./Revenue\";\r\nimport Sectors from \"./Sectors\";\r\nimport SideBar from \"./SideBar\";\r\nimport SP500 from \"./SP500\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Top from \"./Top\";\r\nconst drawerWidth = 300;\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    // justifyContent: \"flex-end\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    backgroundColor: theme.palette.background.default,\r\n    flexGrow: 1,\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(3),\r\n    minWidth: \"480px\",\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n    overflowX: \"hidden\",\r\n  },\r\n});\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      companyNames: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"Home\");\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar\r\n          position=\"relative\"\r\n          className={classes.appBar}\r\n          style={{ backgroundColor: \"inherit\" }}\r\n        >\r\n          <Toolbar>\r\n            <NavigationBar />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.root}>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            anchor=\"left\"\r\n          >\r\n            <div className={classes.toolbar}>\r\n              <Typography variant=\"h4\">Stock Trends</Typography>\r\n            </div>\r\n            <SideBar />\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <Switch>\r\n              <Route exact path=\"/\" />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/about\" component={About} />\r\n              <Route exact path=\"/performance\" component={Performance} />\r\n              <Route\r\n                exact\r\n                path=\"/top/:num/:type\"\r\n                render={(props) => {\r\n                  const {\r\n                    match: {\r\n                      params: { num, type },\r\n                    },\r\n                  } = props;\r\n                  return <Top key={`num=${num}&type=${type}`} {...props} />;\r\n                }}\r\n              />\r\n              <Route exact path=\"/sectors\" component={Sectors} />\r\n              <Route\r\n                exact\r\n                path=\"/companydetails/:company\"\r\n                render={(props) => {\r\n                  const {\r\n                    match: {\r\n                      params: { company },\r\n                    },\r\n                  } = props;\r\n                  return (\r\n                    <CompanyDetails key={`company=${company}`} {...props} />\r\n                  );\r\n                }}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/revenue\"\r\n                component={() => (\r\n                  <Revenue companyNames={this.state.companyNames} />\r\n                )}\r\n              />\r\n              <Route exact path=\"/sp500\" component={SP500} />\r\n              <Route exact path=\"/comparision\" component={Comparision} />\r\n              <Route component={PageNotFound} />\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(Home));\r\n","import React from \"react\";\r\nimport Home from \"./Components/Home\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Home />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst firebaseconfig =  {\r\n  \"type\": \"service_account\",\r\n  \"project_id\": \"stock-analysis-tool-1011\",\r\n  \"private_key_id\": \"bfe6d051488275d38812a800fb374a053af907e3\",\r\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDrmejkjoMtsTBn\\nJOq0wW2nbTwx+HNI6EQJn1+CgFNMgR1VvhLKFABZzRzxo06R8pc/bIybneEnIFQS\\n9ebCQ8Ex9R/icLpckQahA3BOTpUpjQxtvkSt6l0PlkdA1t9zTt6DTfZld89LW8F0\\n/p9X8vOeH72oxX6D8LwPUnOGsZBObxsv9qzfMcGosLJXfP+oXthOI/JqIs/gXe/g\\nJLVOjnak9kMsjEINRt9KX92OBQ/erRpUcp5PQUmNbVU6cEUkkjf/TZUABNZY/lSR\\nXREoEjoT96DQLnAakvyQ0AJCCD4MlaVtfjPtsOnlqZgyVctVZtEdLT7CGcIx7fQO\\nVHyfrptrAgMBAAECggEACNNYJQ+tnE2R6Zs5a5H/YJE3+ws6jlWdDts4gbP66te/\\nWJHpNEaxiKulVOvwKoly3v5a+g1c/NE6NQefIFHXb96l1h6w7HzGScvOLjDFZ6wP\\n9iB1hCpOWCIiAyzJbBFdRn/qJfzp+AG06oQLRgkk1RyNR0A2sAyZjt1g1H/cTwPK\\nE50KUTwdu4/Uq8nk9pRQjwONHh8jMQIatTwvlbaptCQzUbbP7ra0mZbC4IJyLWK6\\nuxxx4QL4Q4E4EvUB17/hy9/olJ/NSPmYdQwPmNnfcK9t6DOb9uh2OA3r0s47YUhT\\nHF+iqsGEPeBiX3mfxwnsuFqLe6kez1x4lROwn2tZAQKBgQD1xSTsuY7tFA8d0jYF\\nAYMYzQAtdCQFNOdur5zMIrLTYYdx4VZVkdlyaOyJsii4UuP5xSbBmJKqfeq3sL6w\\nf+YPPnC8PAD8CzWEKNxgUH8Ja6p1hDnniuTncLICjfCbW7zvrQ4bHerGlaGtcHCH\\nQ8Ten4cVV6faNismcYySaGrS6wKBgQD1aGilhxb/k4eXRYFLutnAngNTVUcglC2l\\nBoSyb7do/jP1Edg3MaMYYrdfMmB+WskCwM9AkDg8/aDmTgnskvlfG2fnnypXJYvE\\nWW7K0PTeAwk5GYkcX0BD/wv4vtO7Wc5YdIz6N7gPkDNFLiKooIXr/yIqBSEK3bMq\\n4hjCyaw5gQKBgQDxUZhGEJU0WIPXRjbgh3GQAopwFx/fNOkhl7GgB1oLkDIMMbQx\\n5Tnbywam1ZaCFnHfKCQ753HrkiPMJfG3IH5m7WqIiWp2EROFJxHsSF3UhDElnqW0\\non7Mea1wMKrWASftNsEpAyEpyHat9D+psXM3HPDold8stg98efYLNBff7QKBgGBZ\\n/PQ4hOQVhV/0Lx6Pnx0MLRwT2FhHNWCcnY79Y9J6M+Ydenm5KGLTp1FeExqpBFDr\\naLPdq+buYbTqoOTck8IunW4IRPRwTl7qCiDhR7K/GGjtyLJ2B2JrCcVBDxp42RZL\\ntGotZDvgDvEzevIgDFSrGDvNRbrhbo4AtV4NFmyBAoGAXURSrlXHeaicQHdd9I+m\\nYdtUl0vvdfejjmpPTdLuNTSFE5MYpfGLTZCNe8LIHVt2A9RQee7Vm6bVY8BNfeR+\\nPd8FzTomdnBJtIKo9mV6uIN2yiecydPDhKCOPjx0DOxqGeqvKSQYg9KgzAR4RryT\\nPGIt0Mqj2Kd6Q/8NsQrDaNQ=\\n-----END PRIVATE KEY-----\\n\",\r\n  \"client_email\": \"firebase-adminsdk-ytt1y@stock-analysis-tool-1011.iam.gserviceaccount.com\",\r\n  \"client_id\": \"107640207133896792847\",\r\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\r\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\r\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\r\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-ytt1y%40stock-analysis-tool-1011.iam.gserviceaccount.com\",\r\n  \"databaseURL\":\"https://stock-analysis-tool-1011-default-rtdb.firebaseio.com/\"\r\n}\r\n\r\nexport default firebaseconfig;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport firebaseconfig from './Constants.js'\r\nimport firebase from 'firebase'\r\n\r\nfirebase.initializeApp(firebaseconfig)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}